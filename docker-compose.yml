version: "3.8"

services:
    app:
        container_name: news_auth_sequilize
        build:
            dockerfile: Dockerfile
            context: .
            target: development
        volumes:
            - .:/usr/src/app
            - /usr/src/app/node_modules
        env_file:
            - ./.env
        ports:
            - ${NEST_APP_PORT}:${NEST_APP_PORT}
        command: /bin/sh -c "npm run start:dev"
        restart: always
        environment:
            NODE_ENV: development
        depends_on:
            - mariadb
            - opensearch-node1 # Ensure the app starts after OpenSearch is ready
            - redis
        networks:
            - news-net
    # we need that stage for data migration and seeding
    seed:
        container_name: news_auth_sequilize_seed
        build:
            dockerfile: Dockerfile
            context: .
            target: development
        volumes:
            - .:/usr/src/app
            - /usr/src/app/node_modules
        env_file:
            - ./.env
        command: /bin/sh -c "sleep 10 && npm run sequelize-migration && npm run sequelize-seed"
        # restart: always
        environment:
            NODE_ENV: development
        depends_on:
            - mariadb
        networks:
            - news-net

    mariadb:
        container_name: news_auth_sequilize_mariadb
        build:
            context: .
            dockerfile: Dockerfile
            target: development
        image: mariadb:latest
        restart: always
        environment:
            MYSQL_DATABASE: ${MYSQL_DATABASE} 
            MYSQL_ROOT_PASSWORD: ${MYSQL_PASSWORD}
        ports:
            - ${MYSQL_PORT}:${MYSQL_PORT} 
        volumes:
            - mariadb_data:/var/lib/mysql 
        env_file:
            - ./.env 
        networks:
            - news-net
    phpmyadmin:
        container_name: news_auth_sequilize_phpmyadmin
        image: phpmyadmin:latest
        restart: always
        ports:
            - "8080:80" 
        environment:
            PMA_HOST: mariadb
            MYSQL_ROOT_PASSWORD: ${MYSQL_PASSWORD} 
        depends_on:
            - mariadb 
        networks:
            - news-net
    redis:
      image: redis:6.0
      ports:
        - ${REDIS_PORT}:${REDIS_PORT}
      networks:
          - news-net

    redis-commander:
      container_name: redis-commander
      hostname: redis-commander
      image: ghcr.io/joeferner/redis-commander:latest
      environment:
        - REDIS_HOSTS=local:redis:${REDIS_PORT}
      ports:
        - '8081:8081'
      networks:
          - news-net

    opensearch-node1: # This is also the hostname of the container within the Docker network (i.e. https://opensearch-node1/)
        image: opensearchproject/opensearch:latest # Specifying the latest available image - modify if you want a specific version
        container_name: opensearch-node1
        environment:
            - cluster.name=opensearch-cluster # Name the cluster
            - node.name=opensearch-node1 # Name the node that will run in this container
            - discovery.seed_hosts=opensearch-node1,opensearch-node2 # Nodes to look for when discovering the cluster
            - cluster.initial_cluster_manager_nodes=opensearch-node1,opensearch-node2 # Nodes eligible to serve as cluster manager
            - bootstrap.memory_lock=true # Disable JVM heap memory swapping
            - "OPENSEARCH_JAVA_OPTS=-Xms512m -Xmx512m" # Set min and max JVM heap sizes to at least 50% of system RAM
            - OPENSEARCH_INITIAL_ADMIN_PASSWORD=${OPENSEARCH_INITIAL_ADMIN_PASSWORD}    # Sets the demo admin user password when using demo configuration, required for OpenSearch 2.12 and later
        ulimits:
          memlock:
              soft: -1 # Set memlock to unlimited (no soft or hard limit)
              hard: -1
          nofile:
              soft: 65536 # Maximum number of open files for the opensearch user - set to at least 65536
              hard: 65536
        volumes:
            - opensearch-data1:/usr/share/opensearch/data # Creates volume called opensearch-data1 and mounts it to the container
        ports:
            - 9200:9200 # REST API
            - 9600:9600 # Performance Analyzer
        networks:
            - news-net # All of the containers will join the same Docker bridge network
    opensearch-node2:
        image: opensearchproject/opensearch:latest # This should be the same image used for opensearch-node1 to avoid issues
        container_name: opensearch-node2
        environment:
            - cluster.name=opensearch-cluster
            - node.name=opensearch-node2
            - discovery.seed_hosts=opensearch-node1,opensearch-node2
            - cluster.initial_cluster_manager_nodes=opensearch-node1,opensearch-node2
            - bootstrap.memory_lock=true
            - "OPENSEARCH_JAVA_OPTS=-Xms512m -Xmx512m"
            - OPENSEARCH_INITIAL_ADMIN_PASSWORD=${OPENSEARCH_INITIAL_ADMIN_PASSWORD}
        ulimits:
          memlock:
              soft: -1
              hard: -1
          nofile:
              soft: 65536
              hard: 65536
        volumes:
            - opensearch-data2:/usr/share/opensearch/data
        networks:
            - news-net
    opensearch-dashboards:
        image: opensearchproject/opensearch-dashboards:latest # Make sure the version of opensearch-dashboards matches the version of opensearch installed on other nodes
        container_name: opensearch-dashboards
        ports:
            - 5601:5601 # Map host port 5601 to container port 5601
        expose:
            - "5601" # Expose port 5601 for web access to OpenSearch Dashboards
        environment:
            OPENSEARCH_HOSTS: '["https://opensearch-node1:9200","https://opensearch-node2:9200"]' # Define the OpenSearch nodes that OpenSearch Dashboards will query
        networks:
            - news-net

networks:
    news-net:



volumes:
    mariadb_data:
    opensearch-data1:
    opensearch-data2: